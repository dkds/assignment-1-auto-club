enum MembersOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  FIRST_NAME_ASC
  FIRST_NAME_DESC
  LAST_NAME_ASC
  LAST_NAME_DESC
  EMAIL_ASC
  EMAIL_DESC
  CAR_MODEL_ID_ASC
  CAR_MODEL_ID_DESC
  VIN_ASC
  VIN_DESC
  MANUFACTURED_DATE_ASC
  MANUFACTURED_DATE_DESC
  AGE_OF_VEHICLE_ASC
  AGE_OF_VEHICLE_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type Query {
  members(first: Int, offset: Int, query: String,orderBy: MembersOrderBy): MemberPage
  membersByCarAgeMoreThan(age: Int): MemberPage
  membersByCarAgeLessThan(age: Int): MemberPage
  memberByName(firstName: String!, lastName: String!, vin: String!): MemberView
  member(id: Int!): MemberView
}

type Mutation {
  createMember(memberInput: MemberInput): MemberView
  updateMember(memberInput: MemberInput): MemberView
  deleteMember(id: Int!): MemberRemoveResponse
}

scalar Datetime

type MemberPage  {
    totalCount: Int
    nodes: [MemberView]
}

type MemberRemoveResponse  {
    deletedMemberId: Int
}

type MemberView  {
    id: Int!
    firstName: String!
    lastName: String!
    email: String!
    vin: String!
    mfd: Datetime!
    carModel: CarModelView!
}

input MemberInput  {
    id: Int
    firstName: String!
    lastName: String!
    email: String!
    vin: String!
    mfd: Datetime!
    carModelId: Int!
}
